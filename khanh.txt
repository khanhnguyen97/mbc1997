const { execSync } = require('child_process');
try {
  require('minimist');
  require('puppeteer-extra');
  require('node-fetch');
  require('ws');
  require('blessed');
  require('pidusage');
  require('axios');
} catch {
  console.log('Cài dependencies...');
  execSync('npm install minimist puppeteer-extra node-fetch@2 ws blessed pidusage axios express', { stdio: 'inherit' });
}

const express = require('express');
const http = require('http');
const WebSocket = require('ws');
const { exec } = require('child_process');
const fs = require('fs');
const path = require('path');
const axios = require('axios');
const app = express();
const server = http.createServer(app);

app.use(express.json()); 
app.use(express.static(path.join(__dirname, 'public')))
   .set('views', path.join(__dirname, 'views'))
   .set('view engine', 'ejs');

app.get('/get-ip', (req, res) => {
    // Lấy IP công cộng của máy chủ
    axios.get('https://api.ipify.org?format=json')
      .then(response => {
        res.send(`IP công cộng của server là: ${response.data.ip}`);
      })
      .catch(error => {
        console.error('Lỗi khi lấy IP công cộng:', error.message);
        res.status(500).send('Không thể lấy IP công cộng');
      });
  });

const BASE_DIR = __dirname;
let ST_FILE = null;

function findNonEmptyStdout(baseDir) {
  const files = fs.readdirSync(baseDir, { withFileTypes: true });

  for (const file of files) {
    const fullPath = path.join(baseDir, file.name);

    if (file.isDirectory()) {
      const result = findNonEmptyStdout(fullPath);
      if (result) return result;
    } else if (file.name === 'stdout.txt') {
      try {
        const content = fs.readFileSync(fullPath, 'utf-8');
        if (content.trim().length > 0) {
          return fullPath;
        }
      } catch (e) {
        console.error('Lỗi khi đọc file:', fullPath, e.message);
      }
    }
  }

  return null;
}
app.get('/', (req, res) => {
    ST_FILE = findNonEmptyStdout(BASE_DIR);
  
    // Kiểm tra file tồn tại
    if (!fs.existsSync(ST_FILE)) {
      return res.status(404).send(`File không tồn tại tại ${ST_FILE}`);
    }
  
    // Đọc nội dung file
    fs.readFile(ST_FILE, 'utf8', (err, data) => {
      if (err) {
        return res.status(500).send(`Lỗi đọc file: ${err.message}`);
      }
  
      const lines = data.split('\n').filter(line => line.trim() !== '');
      if (lines.length === 0) {
        return res.send("Không có dữ liệu trong file.");
      }
  
      // Tìm các đoạn thỏa mãn pattern "PROCESSING.../s"
      const pattern = /PROCESSING.*?\/s/g;
      const matchingParts = [];
  
      for (const line of lines) {
        const parts = line.match(pattern);
        if (parts) matchingParts.push(...parts);
      }
  
      if (matchingParts.length === 0) {
        return res.send("Không có đoạn dữ liệu thỏa mãn.");
      }
  
      // Trả về phần cuối cùng
      return res.send(`<pre>${matchingParts[matchingParts.length - 1]}</pre>`);
    });
  });

app.post('/run-command', (req, res) => {
  const commands = req.body.commands; 

  if (!commands || !Array.isArray(commands) || commands.length === 0) {
    return res.status(400).send('ERROR 400');
  }

  const outputFile = path.join(__dirname, 'output.txt');

  
  fs.writeFileSync(outputFile, '');

  const writeStream = fs.createWriteStream(outputFile, { flags: 'a' });
  let lastLine = '';

  let currentIndex = 0;
  const runNextCommand = () => {
    if (currentIndex >= commands.length) {
      
      return;
    }

    const command = commands[currentIndex].trim();
    if (!command) {
      currentIndex++;
      return runNextCommand();
    }

   
    const child = spawn(command, { shell: true });

   
    child.stdout.on('data', (data) => {
      const output = data.toString();
      const lines = output.split('\n');
      for (const line of lines) {
        if (line.includes('/s')) {
          lastLine = line; 
          fs.writeFileSync(outputFile, '');
          writeStream.write(lastLine + '\n'); 
        }
      }
      
    });

    child.stderr.on('data', (data) => {
      lastLine = 'stderr: ' + data.toString();  
    });

    // Ghi dòng cuối vào file mỗi 2s
    const interval = setInterval(() => {
      if (lastLine) {
        fs.writeFileSync(outputFile, '');
        writeStream.write(lastLine + '\n');  
        lastLine = '';  
      }
    }, 60000);

    child.on('close', (code) => {
      clearInterval(interval);
      if (lastLine) writeStream.write(lastLine + '\n');  
      currentIndex++;
      runNextCommand();  
    });

    
  };

  runNextCommand();  

  res.send(`Done.`);
});


// Tạo WebSocket server và lắng nghe ở đường dẫn /terminal trên port 1997
const wss = new WebSocket.Server({ server, path: '/terminal' });
let latestClient = null;
// Xử lý khi có client kết nối WebSocket
wss.on('connection', (ws) => {
  console.clear();
  console.log('Client connected to /terminal');
  latestClient = ws;

  // Lắng nghe tin nhắn (message) từ client
  ws.on('message', (message) => {
    const command = message.toString();
    console.clear();
    console.log(`Running command: ${command}`);

    // Thực thi lệnh shell
    exec(command, (error, stdout, stderr) => {
      let output = stdout + stderr;
      if (error) {
        // Nếu có lỗi khi chạy lệnh, bao gồm thông báo lỗi
        output = `Error: ${error.message}\n` + output;
      }
      // Gửi toàn bộ kết quả (stdout + stderr) về client
      ws.send(output);
    });
  });

  ws.on('close', () => {
    console.clear();
    console.log('Client disconnected');
    latestClient = null;
  });
});

// Server bắt đầu lắng nghe trên cổng 1997
server.listen(1997, () => {
  console.clear();
  console.log('port 1997');
});

